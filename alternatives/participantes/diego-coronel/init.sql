CREATE UNLOGGED TABLE IF NOT EXISTS public.cliente
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    limit integer NOT NULL,
    current_balance integer NOT NULL,
    versao integer NOT NULL default 1,
    CONSTRAINT cliente_pkey PRIMARY KEY (id),
    CONSTRAINT current_balance_limit_check CHECK (current_balance >= (- limit))
);

CREATE UNLOGGED TABLE IF NOT EXISTS public.transacao
(
    id_cliente bigint NOT NULL,
    amount integer NOT NULL,
    submitted_at timestamp without time zone NOT NULL DEFAULT now(),
    kind character varying(1) COLLATE pg_catalog."default" NOT NULL,
    description character varying(10) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT transacao_cliente_id_idx FOREIGN KEY (id_cliente)
        REFERENCES public.cliente (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);

CREATE INDEX IF NOT EXISTS id_cliente_idx
    ON public.transacao USING btree
        (id_cliente ASC NULLS LAST)
    TABLESPACE pg_default;

CREATE INDEX IF NOT EXISTS submitted_at_idx
    ON public.transacao USING btree
        (submitted_at ASC NULLS LAST)
    TABLESPACE pg_default;

insert into cliente (id, limit, current_balance) values (1, 100000, 0);
insert into cliente (id, limit, current_balance) values (2, 80000, 0);
insert into cliente (id, limit, current_balance) values (3, 1000000, 0);
insert into cliente (id, limit, current_balance) values (4, 10000000, 0);
insert into cliente (id, limit, current_balance) values (5, 500000, 0);
