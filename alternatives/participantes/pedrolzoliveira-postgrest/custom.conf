upstream api {
    server postgrest1:3000;
    server postgrest2:3000;
}

server {
    listen 9999;

    location ~ ^/members/([1-5])/balance/?$ {
        rewrite ^/members/([1-5])/balance/?$ /rpc/balance?p_cliente_id=$1 break;
        proxy_pass http://api;
    }

    location ~ /members/(\d*)/balance {
        return 404;
    }

    location ~ ^/members/([1-5])/transactions/?$ {
        set $client_id $1;
        rewrite ^/members/([1-5])/transactions/?$ /rpc/create_transacao break;
        rewrite_by_lua_block {
            local cjson = require "cjson"
            ngx.req.read_body()
            local body = ngx.req.get_body_data()

            if not body then
                return ngx.exit(422)
            end

            local data = cjson.decode(body)

            if data["kind"] ~= "d" and data["kind"] ~= "c" then
                return ngx.exit(422)
            end

            if type(data["description"]) ~= "string" or data["description"] == "" or #data["description"] > 10 then
                return ngx.exit(422)
            end

            if type(data["amount"]) ~= "number" or data["amount"] < 0  or data["amount"] ~= math.floor(data["amount"]) then
                return ngx.exit(422)
            end


            data["cliente_id"] = tonumber(ngx.var.client_id)

            local modified_body = cjson.encode(data)
            ngx.req.set_body_data(modified_body)
        }

        proxy_pass http://api;
    }
    
    location ~ /members/(\d*)/transactions {
        return 422;
    }
}
