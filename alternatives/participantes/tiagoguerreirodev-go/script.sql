-- Coloque scripts iniciais aqui
CREATE UNLOGGED TABLE members (
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    limit INTEGER,
    current_balance INTEGER DEFAULT 0
);

CREATE INDEX idx_client_id ON members USING HASH(id);

ALTER TABLE members ADD CONSTRAINT balance_within_limit CHECK (current_balance > -limit);

CREATE UNLOGGED TABLE transactions (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    user_id SMALLINT,
    amount INTEGER,
    kind VARCHAR(1),
    description VARCHAR(10),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_transaction_id_desc ON transactions (id DESC);
CREATE INDEX idx_transaction_user_id ON transactions USING HASH(user_id);

-- Função para atualizar o current_balance do usuário
CREATE OR REPLACE FUNCTION updateUserBalance(userId SMALLINT, transactionValue INTEGER)
    RETURNS TABLE (newBalance INTEGER, limit_res INTEGER)
AS $$
DECLARE
    balance INTEGER;
    newBalance INTEGER;
    limit_res INTEGER;
BEGIN
    SELECT current_balance, limit INTO balance, limit_res FROM members WHERE id = userId FOR UPDATE;

    IF NOT FOUND THEN
        RAISE EXCEPTION 'user not found on postgres';
    END IF;

    SELECT transactionValue + balance INTO newBalance;
    UPDATE members SET current_balance = newBalance WHERE id = userId;
    RETURN QUERY SELECT newBalance, limit_res;
END;
    $$ LANGUAGE plpgsql;

DO $$
BEGIN
  INSERT INTO members (limit)
  VALUES
    (1000 * 100),
    (800 * 100),
    (10000 * 100),
    (100000 * 100),
    (5000 * 100);
END;
    $$